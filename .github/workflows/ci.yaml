name: CI

concurrency:
  group: ci-pr-${{ github.event.number }}
  cancel-in-progress: true

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - converted_to_draft
      - ready_for_review

env:
  GCLOUD_BUCKET_NAME: blazing-fire-playwright-reports

jobs:
  continous-integration:
    if: github.event.pull_request.draft == false
    name: CI Checks
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.20.3

      - name: Install node dependencies (on the host)
        run: npm clean-install --no-audit

      - name: Setup .env
        run: |
          cp .env.example .env

      - name: Pull & build Docker images
        run: |
          docker compose pull
          docker compose build

      - name: Up the services
        run: docker compose up --detach --wait

      - name: Setup the DB (restore data and generate types)
        run: |
          npm run db:reset
          npm run db:types

      - name: Run Prettier check
        run: docker compose run --rm dev npm run format:check

      - name: Run ESLint check
        run: docker compose run --rm dev npm run lint

      - name: Run Vitest Unit Tests
        run: docker compose run --rm dev npm run test:unit

      - name: Run E2E Tests
        id: e2e-tests
        continue-on-error: true
        run: docker compose run --rm --env CI=true test

      - name: Authenticate to Google Cloud
        if: steps.e2e-tests.outcome == 'failure'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCLOUD_WORKLOAD_ID_PROVIDER }}
          service_account: ${{ secrets.GCLOUD_SERVICE_ACCOUNT }}

      - name: Set 'TEST_REPORT_URL'
        if: steps.e2e-tests.outcome == 'failure'
        run: echo "TEST_REPORT_URL=https://storage.googleapis.com/${{ env.GCLOUD_BUCKET_NAME }}/pr-${{ github.event.number }}/playwright-report/index.html" >> $GITHUB_ENV

      - name: Upload Playwright report
        if: steps.e2e-tests.outcome == 'failure'
        id: upload-report
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: 'apps/web'
          glob: 'playwright-**/**'
          destination: '${{ env.GCLOUD_BUCKET_NAME }}/pr-${{ github.event.number }}'
          process_gcloudignore: false
          parent: false
          gzip: false

      - name: Update PR Description (if tests failed)
        uses: nefrob/pr-description@v1.1.2
        if: steps.e2e-tests.outcome == 'failure'
        with:
          content: "<!-- e2e_start_match -->\n**Playwright tests suite has failed! :boom:**\nReport is available [here](${{ env.TEST_REPORT_URL }}).\n<!-- e2e_end_match -->"
          regex: '<!--e2e_start_match -->.*?<!-- e2e_end_match -->'
          regexFlags: ims
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update PR Description (if tests passed)
        uses: nefrob/pr-description@v1.1.2
        if: steps.e2e-tests.outcome == 'success'
        with:
          content: "<!-- e2e_start_match -->\n**Playwright tests suite has passed! :white_check_mark:**\n Report has not been published.\n<!-- e2e_end_match -->"
          regex: '<!--e2e_start_match -->.*?<!-- e2e_end_match -->'
          regexFlags: ims
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Fail if E2E tests failed
        if: steps.e2e-tests.outcome == 'failure'
        run: exit 1
